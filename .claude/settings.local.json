{
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "// Development workflow - package manager",
      "Bash(pnpm install:*)",
      "Bash(pnpm build:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm typecheck:*)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm format:*)",
      "Bash(pnpm dev:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm remove:*)",
      "Bash(pnpm uninstall:*)",
      "Bash(pnpm audit:*)",
      "Bash(pnpm list:*)",
      "Bash(pnpm why:*)",
      "Bash(pnpm view:*)",
      "Bash(npm install:*)",
      "Bash(npm run:*)",
      "Bash(npm uninstall:*)",

      "// Development workflow - tools and execution",
      "Bash(pnpm tools:*)",
      "Bash(pnpm exec:*)",
      "Bash(pnpm turbo run:*)",
      "Bash(pnpm --filter:*)",
      "Bash(pnpm -r --filter:*)",
      "Bash(pnpm ci:local:*)",
      "Bash(pnpm biome check:*)",
      "Bash(pnpm lint:assertions:*)",
      "Bash(pnpm lint-staged:*)",
      "Bash(pnpm vitest run:*)",
      "Bash(pnpm prisma generate:*)",
      "Bash(node tools/dist:*)",
      "Bash(node:*)",
      "Bash(npx tsc:*)",

      "// Git - read operations",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git show:*)",
      "Bash(git branch:*)",

      "// Git - safe workflow",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git reset:*)",
      "Bash(git rebase:*)",
      "Bash(git merge:*)",

      "// GitHub CLI",
      "Bash(gh pr:*)",
      "Bash(gh issue:*)",

      "// Shell utilities and file operations",
      "Bash(cat:*)",
      "Bash(echo:*)",
      "Bash(find:*)",
      "Bash(tree:*)",
      "Bash(awk:*)",
      "Bash(xargs:*)",
      "Bash(md5sum:*)",
      "Bash(ln:*)",
      "Bash(curl:*)",
      "Bash(timeout:*)",
      "Bash(pkill:*)",
      "Bash(taskkill:*)",
      "Bash(winget install:*)",

      "// Shell scripting patterns",
      "Bash(while read file)",
      "Bash(for file in:*)",
      "Bash(do:*)",
      "Bash(done)",
      "Bash(/dev/null)",

      "// File reading - project-specific paths",
      "Read(**/tools/logs/**)",
      "Read(**/.claude/**)",
      "Read(**/ai/**)",
      "Read(//c/tmp/**)",

      "// Web access",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:jxnl.co)",
      "WebFetch(domain:www.anthropic.com)",
      "WebSearch"
    ],
    "deny": [
      "// Git - destructive operations (BLOCKED FOR SAFETY)",
      "Bash(git push --force:*)",
      "Bash(git push -f:*)",
      "Bash(git reset --hard:*)",
      "Bash(git clean -f:*)",
      "Bash(git clean -fd:*)",
      "Bash(git branch -D:*)",

      "// Package publishing (BLOCKED FOR SAFETY)",
      "Bash(pnpm publish:*)",
      "Bash(npm publish:*)"
    ],
    "ask": []
  },
  "hooks": {
    "SubagentStop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "node tools/dist/hooks/subagent-stop.js"
          }
        ]
      }
    ]
  }
}
