# ============================================================================
# Docker Compose - Production Configuration
# ============================================================================
# This file defines the production-ready services for the fullstack application.
# For development with hot-reload, use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
#
# Services:
#   - postgres: PostgreSQL database
#   - api: NestJS REST API
#   - web: Next.js web application
#
# Usage:
#   Production: docker-compose up -d
#   Development: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
#   Teardown: docker-compose down -v

version: '3.9'

services:
  # ==========================================================================
  # PostgreSQL Database
  # ==========================================================================
  postgres:
    image: postgres:16-alpine
    container_name: fullstack-postgres
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-fullstack}
    volumes:
      # Persist database data
      - postgres_data:/var/lib/postgresql/data
      # Optional: Custom init scripts
      # - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fullstack-network

  # ==========================================================================
  # NestJS API Server
  # ==========================================================================
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      args:
        NODE_ENV: production
    container_name: fullstack-api
    restart: unless-stopped
    ports:
      - "${API_PORT:-3001}:3001"
    environment:
      # Node Environment
      NODE_ENV: ${NODE_ENV:-production}

      # Database Connection
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-fullstack}?schema=public

      # Better Auth Configuration
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET}
      BETTER_AUTH_URL: ${BETTER_AUTH_URL:-http://localhost:3001}

      # API Configuration
      PORT: 3001
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - fullstack-network

  # ==========================================================================
  # Next.js Web Application
  # ==========================================================================
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      args:
        NODE_ENV: production
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
    container_name: fullstack-web
    restart: unless-stopped
    ports:
      - "${WEB_PORT:-3000}:3000"
    environment:
      # Node Environment
      NODE_ENV: ${NODE_ENV:-production}

      # Next.js Configuration
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://api:3001}

      # Authentication
      NEXT_PUBLIC_BETTER_AUTH_URL: ${BETTER_AUTH_URL:-http://localhost:3001}
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - fullstack-network

# ============================================================================
# Volumes
# ============================================================================
volumes:
  postgres_data:
    driver: local
    name: fullstack-postgres-data

# ============================================================================
# Networks
# ============================================================================
networks:
  fullstack-network:
    driver: bridge
    name: fullstack-network
